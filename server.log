
> cabala-website@0.1.0 dev
> next dev

   ‚ñ≤ Next.js 15.3.5
   - Local:        http://localhost:3000
   - Network:      http://192.168.0.103:3000
   - Environments: .env.local, .env

 ‚úì Starting...
 ‚úì Ready in 4.6s
 ‚óã Compiling / ...
 ‚úì Compiled / in 8.3s (806 modules)
 ‚ö† metadataBase property in metadata export is not set for resolving social open graph or twitter images, using "http://localhost:3000". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase
 GET / 200 in 9246ms
 ‚úì Compiled in 1202ms (354 modules)
 GET / 200 in 1052ms
 ‚óã Compiling /favicon.ico ...
 ‚úì Compiled /api/courses in 1716ms (468 modules)
 ‚úì Compiled in 1501ms (340 modules)
 GET /favicon.ico 200 in 3788ms
 GET /api/courses 200 in 3701ms
 ‚óã Compiling /login ...
 ‚úì Compiled /login in 4.9s (833 modules)
 ‚ö† metadataBase property in metadata export is not set for resolving social open graph or twitter images, using "http://localhost:3000". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase
 GET /login 200 in 7713ms
 GET /login 200 in 850ms
 GET /login 200 in 267ms
 GET /login 200 in 461ms
 GET / 200 in 1856ms
 GET /favicon.ico 200 in 88ms
 GET /api/courses 200 in 497ms
 GET /login 200 in 154ms
 ‚óã Compiling /api/auth/login ...
 ‚úì Compiled /api/auth/login in 2.4s (917 modules)
 POST /api/auth/login 200 in 4684ms
 ‚óã Compiling /dashboard ...
 ‚úì Compiled /dashboard in 3.2s (928 modules)
 ‚ö† metadataBase property in metadata export is not set for resolving social open graph or twitter images, using "http://localhost:3000". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase
 GET /dashboard 200 in 4137ms
 GET /api/courses 200 in 433ms
 ‚óã Compiling /api/my-enrollments ...
 ‚úì Compiled /api/my-enrollments in 1773ms (931 modules)
Moodle API Request: {
  wsfunction: 'core_course_get_courses',
  params: {},
  url: 'https://learn.cabala.com.vn/webservice/rest/server.php',
  formattedParams: {
    wstoken: '567fe59f13ca3bdb3a65a1672e764eeb',
    wsfunction: 'core_course_get_courses',
    moodlewsrestformat: 'json'
  }
}
 GET /api/my-enrollments 200 in 3213ms
Moodle API Request: {
  wsfunction: 'core_course_get_courses',
  params: {},
  url: 'https://learn.cabala.com.vn/webservice/rest/server.php',
  formattedParams: {
    wstoken: '567fe59f13ca3bdb3a65a1672e764eeb',
    wsfunction: 'core_course_get_courses',
    moodlewsrestformat: 'json'
  }
}
 GET /api/my-enrollments 200 in 676ms
 ‚óã Compiling /courses/[id] ...
 ‚úì Compiled /courses/[id] in 2.4s (938 modules)
 ‚ö† metadataBase property in metadata export is not set for resolving social open graph or twitter images, using "http://localhost:3000". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase
 GET /courses/2 200 in 5707ms
 GET /courses/2 200 in 149ms
 GET /courses/2 200 in 189ms
 GET /courses/2 200 in 188ms
 ‚óã Compiling /api/courses/[id] ...
 ‚úì Compiled /api/courses/[id] in 1923ms (940 modules)
Moodle API Request: {
  wsfunction: 'core_course_get_courses',
  params: {},
  url: 'https://learn.cabala.com.vn/webservice/rest/server.php',
  formattedParams: {
    wstoken: '567fe59f13ca3bdb3a65a1672e764eeb',
    wsfunction: 'core_course_get_courses',
    moodlewsrestformat: 'json'
  }
}
 GET /api/courses/2 200 in 5300ms
Moodle API Request: {
  wsfunction: 'core_course_get_courses',
  params: {},
  url: 'https://learn.cabala.com.vn/webservice/rest/server.php',
  formattedParams: {
    wstoken: '567fe59f13ca3bdb3a65a1672e764eeb',
    wsfunction: 'core_course_get_courses',
    moodlewsrestformat: 'json'
  }
}
 GET /api/courses/2 200 in 271ms
 ‚óã Compiling /api/courses/[id]/sso ...
 ‚úì Compiled /api/courses/[id]/sso in 1956ms (944 modules)
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."users"."id", "public"."users"."email", "public"."users"."emailVerified", "public"."users"."name", "public"."users"."firstName", "public"."users"."lastName", "public"."users"."password", "public"."users"."avatar", "public"."users"."phone", "public"."users"."role"::text, "public"."users"."moodleUserId", "public"."users"."moodleUsername", "public"."users"."moodlePassword", "public"."users"."isActive", "public"."users"."lastLogin", "public"."users"."createdAt", "public"."users"."updatedAt" FROM "public"."users" WHERE ("public"."users"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query COMMIT
üîç Starting SSO process for user: {
  email: 'irislevine13@gmail.com',
  moodleUserId: 97,
  moodleUsername: 'irislevine13_1752297399863',
  courseId: 2
}
üîç Step 1: Checking if email exists in Moodle...
Moodle API Request: {
  wsfunction: 'core_user_get_users_by_field',
  params: { field: 'email', values: [ 'irislevine13@gmail.com' ] },
  url: 'https://learn.cabala.com.vn/webservice/rest/server.php',
  formattedParams: {
    wstoken: '567fe59f13ca3bdb3a65a1672e764eeb',
    wsfunction: 'core_user_get_users_by_field',
    moodlewsrestformat: 'json',
    field: 'email',
    'values[0]': 'irislevine13@gmail.com'
  }
}
‚úÖ Email found in Moodle: {
  id: 97,
  username: 'irislevine13_1752297399863',
  email: 'irislevine13@gmail.com'
}
‚úÖ Perfect match - using existing account
üîç Step 2: Checking course enrollment...
Moodle API Request: {
  wsfunction: 'core_enrol_get_enrolled_users',
  params: { courseid: 2 },
  url: 'https://learn.cabala.com.vn/webservice/rest/server.php',
  formattedParams: {
    wstoken: '567fe59f13ca3bdb3a65a1672e764eeb',
    wsfunction: 'core_enrol_get_enrolled_users',
    moodlewsrestformat: 'json',
    courseid: '2'
  }
}
‚úÖ User already enrolled in course
üîç Step 3: Generating SSO token...
üîç Using email for JWT: irislevine13@gmail.com
üîç Using username for JWT: irislevine13_1752297399863
üî• GENERATING MOODLE JWT - CODE IS RUNNING!
üî• Input user data: {
  email: 'irislevine13@gmail.com',
  username: 'irislevine13_1752297399863',
  firstName: 'Linh',
  lastName: 'Nguyen'
}
üî• FINAL JWT PAYLOAD: {
  username: 'irislevine13_1752297399863',
  email: 'irislevine13@gmail.com',
  firstname: 'Linh',
  lastname: 'Nguyen'
}
üî• GENERATED JWT TOKEN: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImlyaXNsZXZpbmUxM18xNzUyMjk3Mzk5ODYzIiwiZW1haWwiOiJpcmlzbGV2aW5lMTNAZ21haWwuY29tIiwiZmlyc3RuYW1lIjoiTGluaCIsImxhc3RuYW1lIjoiTmd1eWVuIiwiaWF0IjoxNzUyMzg5MjQ2fQ.CNvrScmjON4q_rPicE-OtqOnQVDhlok7kXUFBAtE8Jk
üîç Generated SSO URL: https://learn.cabala.com.vn/auth/sso/login.php?jwt_token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImlyaXNsZXZpbmUxM18xNzUyMjk3Mzk5ODYzIiwiZW1haWwiOiJpcmlzbGV2aW5lMTNAZ21haWwuY29tIiwiZmlyc3RuYW1lIjoiTGluaCIsImxhc3RuYW1lIjoiTmd1eWVuIiwiaWF0IjoxNzUyMzg5MjQ2fQ.CNvrScmjON4q_rPicE-OtqOnQVDhlok7kXUFBAtE8Jk&redirect=https%3A%2F%2Flearn.cabala.com.vn%2Fcourse%2Fview.php%3Fid%3D2
‚úÖ SSO process completed successfully: {
  finalMoodleUserId: 97,
  finalMoodleUsername: 'irislevine13_1752297399863',
  finalMoodleEmail: 'irislevine13@gmail.com',
  courseId: 2,
  ssoUrl: 'https://learn.cabala.com.vn/auth/sso/login.php?jwt_token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImlyaXNsZXZpbmUxM18xNzUyMjk3Mzk5ODYzIiwiZW1haWwiOiJpcmlzbGV2aW5lMTNAZ21haWwuY29tIiwiZmlyc3RuYW1lIjoiTGluaCIsImxhc3RuYW1lIjoiTmd1eWVuIiwiaWF0IjoxNzUyMzg5MjQ2fQ.CNvrScmjON4q_rPicE-OtqOnQVDhlok7kXUFBAtE8Jk&redirect=https%3A%2F%2Flearn.cabala.com.vn%2Fcourse%2Fview.php%3Fid%3D2'
}
 GET /api/courses/2/sso?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiJjbWN6c21ld3kwMDAwanEzbjZkZnVmMjFkIiwiZW1haWwiOiJpcmlzbGV2aW5lMTNAZ21haWwuY29tIiwibmFtZSI6IkxpbmggTmd1eWVuIiwicm9sZSI6IlNUVURFTlQiLCJpYXQiOjE3NTIzODkyMTcsImV4cCI6MTc1Mjk5NDAxN30.c0PgmElBZ501ePJieTKyvjGcfvaJdgXmmHGBl0bOIFw 200 in 4908ms
 ‚úì Compiled in 4s (846 modules)
 ‚úì Compiled in 754ms (370 modules)
 ‚úì Compiled in 643ms (370 modules)
 ‚óã Compiling /_not-found ...
 ‚úì Compiled /_not-found in 1097ms (835 modules)
 ‚ö† metadataBase property in metadata export is not set for resolving social open graph or twitter images, using "http://localhost:3000". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase
 GET /api/courses/7/access 404 in 1590ms
 GET / 200 in 375ms
 GET / 200 in 304ms
 ‚úì Compiled /api/courses in 461ms (495 modules)
 GET /api/courses 200 in 1039ms
 ‚óã Compiling /courses ...
 ‚úì Compiled /courses in 3.3s (860 modules)
 ‚ö† metadataBase property in metadata export is not set for resolving social open graph or twitter images, using "http://localhost:3000". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase
 GET /courses 200 in 3759ms
 GET /api/courses 200 in 335ms
 GET /api/courses 200 in 318ms
 GET /courses/2 200 in 132ms
 ‚óã Compiling /api/courses/[id] ...
 ‚úì Compiled /api/courses/[id] in 1050ms (503 modules)
Moodle API Request: {
  wsfunction: 'core_course_get_courses',
  params: {},
  url: 'https://learn.cabala.com.vn/webservice/rest/server.php',
  formattedParams: {
    wstoken: '567fe59f13ca3bdb3a65a1672e764eeb',
    wsfunction: 'core_course_get_courses',
    moodlewsrestformat: 'json'
  }
}
 GET /api/courses/2 200 in 1379ms
Moodle API Request: {
  wsfunction: 'core_course_get_courses',
  params: {},
  url: 'https://learn.cabala.com.vn/webservice/rest/server.php',
  formattedParams: {
    wstoken: '567fe59f13ca3bdb3a65a1672e764eeb',
    wsfunction: 'core_course_get_courses',
    moodlewsrestformat: 'json'
  }
}
 GET /api/courses/2 200 in 228ms
 ‚óã Compiling /api/courses/[id]/sso ...
 ‚úì Compiled /api/courses/[id]/sso in 1500ms (588 modules)
 ‚ö† metadataBase property in metadata export is not set for resolving social open graph or twitter images, using "http://localhost:3000". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase
 GET /courses/2 200 in 801ms
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."users"."id", "public"."users"."email", "public"."users"."emailVerified", "public"."users"."name", "public"."users"."firstName", "public"."users"."lastName", "public"."users"."password", "public"."users"."avatar", "public"."users"."phone", "public"."users"."role"::text, "public"."users"."moodleUserId", "public"."users"."moodleUsername", "public"."users"."moodlePassword", "public"."users"."isActive", "public"."users"."lastLogin", "public"."users"."createdAt", "public"."users"."updatedAt" FROM "public"."users" WHERE ("public"."users"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query COMMIT
üîç Starting SSO process for user: {
  email: 'irislevine13@gmail.com',
  moodleUserId: 97,
  moodleUsername: 'irislevine13_1752297399863',
  courseId: 2
}
üîç Step 1: Checking if email exists in Moodle...
Moodle API Request: {
  wsfunction: 'core_user_get_users_by_field',
  params: { field: 'email', values: [ 'irislevine13@gmail.com' ] },
  url: 'https://learn.cabala.com.vn/webservice/rest/server.php',
  formattedParams: {
    wstoken: '567fe59f13ca3bdb3a65a1672e764eeb',
    wsfunction: 'core_user_get_users_by_field',
    moodlewsrestformat: 'json',
    field: 'email',
    'values[0]': 'irislevine13@gmail.com'
  }
}
‚úÖ Email found in Moodle: {
  id: 97,
  username: 'irislevine13_1752297399863',
  email: 'irislevine13@gmail.com'
}
‚úÖ Perfect match - using existing account
üîç Step 2: Checking course enrollment...
Moodle API Request: {
  wsfunction: 'core_enrol_get_enrolled_users',
  params: { courseid: 2 },
  url: 'https://learn.cabala.com.vn/webservice/rest/server.php',
  formattedParams: {
    wstoken: '567fe59f13ca3bdb3a65a1672e764eeb',
    wsfunction: 'core_enrol_get_enrolled_users',
    moodlewsrestformat: 'json',
    courseid: '2'
  }
}
‚úÖ User already enrolled in course
üîç Step 3: Creating manual login redirect...
üîç Using username: irislevine13_1752297399863
üîç Using password from database
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."users"."id", "public"."users"."moodlePassword" FROM "public"."users" WHERE ("public"."users"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
üîç Will redirect to course: https://learn.cabala.com.vn/course/view.php?id=2
‚úÖ Manual login process completed successfully: {
  finalMoodleUserId: 97,
  finalMoodleUsername: 'irislevine13_1752297399863',
  finalMoodleEmail: 'irislevine13@gmail.com',
  courseId: 2,
  courseUrl: 'https://learn.cabala.com.vn/course/view.php?id=2'
}
 GET /api/courses/2/sso?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiJjbWN6c21ld3kwMDAwanEzbjZkZnVmMjFkIiwiZW1haWwiOiJpcmlzbGV2aW5lMTNAZ21haWwuY29tIiwibmFtZSI6IkxpbmggTmd1eWVuIiwicm9sZSI6IlNUVURFTlQiLCJpYXQiOjE3NTIzODkyMTcsImV4cCI6MTc1Mjk5NDAxN30.c0PgmElBZ501ePJieTKyvjGcfvaJdgXmmHGBl0bOIFw 200 in 3754ms
prisma:query COMMIT
 ‚úì Compiled in 2.7s (853 modules)
 ‚ö† metadataBase property in metadata export is not set for resolving social open graph or twitter images, using "http://localhost:3000". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase
 GET /courses/2 200 in 860ms
 ‚óã Compiling /api/courses/[id] ...
 ‚úì Compiled /api/courses/[id] in 597ms (500 modules)
Moodle API Request: {
  wsfunction: 'core_course_get_courses',
  params: {},
  url: 'https://learn.cabala.com.vn/webservice/rest/server.php',
  formattedParams: {
    wstoken: '567fe59f13ca3bdb3a65a1672e764eeb',
    wsfunction: 'core_course_get_courses',
    moodlewsrestformat: 'json'
  }
}
 GET /api/courses/2 200 in 1192ms
 ‚úì Compiled /api/courses/[id]/sso in 492ms (585 modules)
prisma:query SELECT 1
prisma:query BEGIN
prisma:query DEALLOCATE ALL
 ‚ö† metadataBase property in metadata export is not set for resolving social open graph or twitter images, using "http://localhost:3000". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase
prisma:query SELECT "public"."users"."id", "public"."users"."email", "public"."users"."emailVerified", "public"."users"."name", "public"."users"."firstName", "public"."users"."lastName", "public"."users"."password", "public"."users"."avatar", "public"."users"."phone", "public"."users"."role"::text, "public"."users"."moodleUserId", "public"."users"."moodleUsername", "public"."users"."moodlePassword", "public"."users"."isActive", "public"."users"."lastLogin", "public"."users"."createdAt", "public"."users"."updatedAt" FROM "public"."users" WHERE ("public"."users"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
 GET /courses/2 200 in 523ms
prisma:query COMMIT
üîç Starting SSO process for user: {
  email: 'irislevine13@gmail.com',
  moodleUserId: 97,
  moodleUsername: 'irislevine13_1752297399863',
  courseId: 2
}
üîç Step 1: Checking if email exists in Moodle...
Moodle API Request: {
  wsfunction: 'core_user_get_users_by_field',
  params: { field: 'email', values: [ 'irislevine13@gmail.com' ] },
  url: 'https://learn.cabala.com.vn/webservice/rest/server.php',
  formattedParams: {
    wstoken: '567fe59f13ca3bdb3a65a1672e764eeb',
    wsfunction: 'core_user_get_users_by_field',
    moodlewsrestformat: 'json',
    field: 'email',
    'values[0]': 'irislevine13@gmail.com'
  }
}
‚úÖ Email found in Moodle: {
  id: 97,
  username: 'irislevine13_1752297399863',
  email: 'irislevine13@gmail.com'
}
‚úÖ Perfect match - using existing account
üîç Step 2: Checking course enrollment...
Moodle API Request: {
  wsfunction: 'core_enrol_get_enrolled_users',
  params: { courseid: 2 },
  url: 'https://learn.cabala.com.vn/webservice/rest/server.php',
  formattedParams: {
    wstoken: '567fe59f13ca3bdb3a65a1672e764eeb',
    wsfunction: 'core_enrol_get_enrolled_users',
    moodlewsrestformat: 'json',
    courseid: '2'
  }
}
‚úÖ User already enrolled in course
üîç Step 3: Creating manual login redirect...
üîç Using username: irislevine13_1752297399863
üîç Using password from database
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."users"."id", "public"."users"."moodlePassword" FROM "public"."users" WHERE ("public"."users"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query COMMIT
üîç Will redirect to course: https://learn.cabala.com.vn/course/view.php?id=2
‚úÖ Manual login process completed successfully: {
  finalMoodleUserId: 97,
  finalMoodleUsername: 'irislevine13_1752297399863',
  finalMoodleEmail: 'irislevine13@gmail.com',
  courseId: 2,
  courseUrl: 'https://learn.cabala.com.vn/course/view.php?id=2'
}
üîç Redirecting to Moodle login: https://learn.cabala.com.vn/login/index.php?loginredirect=1&username=irislevine13_1752297399863
 GET /api/courses/2/sso?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiJjbWN6c21ld3kwMDAwanEzbjZkZnVmMjFkIiwiZW1haWwiOiJpcmlzbGV2aW5lMTNAZ21haWwuY29tIiwibmFtZSI6IkxpbmggTmd1eWVuIiwicm9sZSI6IlNUVURFTlQiLCJpYXQiOjE3NTIzODkyMTcsImV4cCI6MTc1Mjk5NDAxN30.c0PgmElBZ501ePJieTKyvjGcfvaJdgXmmHGBl0bOIFw 307 in 1990ms
 ‚úì Compiled in 2.7s (853 modules)
 ‚ö† metadataBase property in metadata export is not set for resolving social open graph or twitter images, using "http://localhost:3000". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase
 GET /courses/2 200 in 868ms
 ‚óã Compiling /api/courses/[id] ...
 ‚úì Compiled /api/courses/[id] in 631ms (500 modules)
Moodle API Request: {
  wsfunction: 'core_course_get_courses',
  params: {},
  url: 'https://learn.cabala.com.vn/webservice/rest/server.php',
  formattedParams: {
    wstoken: '567fe59f13ca3bdb3a65a1672e764eeb',
    wsfunction: 'core_course_get_courses',
    moodlewsrestformat: 'json'
  }
}
 GET /api/courses/2 200 in 1285ms
 ‚úì Compiled /api/courses/[id]/sso in 466ms (585 modules)
 ‚ö† metadataBase property in metadata export is not set for resolving social open graph or twitter images, using "http://localhost:3000". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase
 GET /courses/2 200 in 569ms
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."users"."id", "public"."users"."email", "public"."users"."emailVerified", "public"."users"."name", "public"."users"."firstName", "public"."users"."lastName", "public"."users"."password", "public"."users"."avatar", "public"."users"."phone", "public"."users"."role"::text, "public"."users"."moodleUserId", "public"."users"."moodleUsername", "public"."users"."moodlePassword", "public"."users"."isActive", "public"."users"."lastLogin", "public"."users"."createdAt", "public"."users"."updatedAt" FROM "public"."users" WHERE ("public"."users"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query COMMIT
üîç Starting SSO process for user: {
  email: 'irislevine13@gmail.com',
  moodleUserId: 97,
  moodleUsername: 'irislevine13_1752297399863',
  courseId: 2
}
üîç Step 1: Checking if email exists in Moodle...
Moodle API Request: {
  wsfunction: 'core_user_get_users_by_field',
  params: { field: 'email', values: [ 'irislevine13@gmail.com' ] },
  url: 'https://learn.cabala.com.vn/webservice/rest/server.php',
  formattedParams: {
    wstoken: '567fe59f13ca3bdb3a65a1672e764eeb',
    wsfunction: 'core_user_get_users_by_field',
    moodlewsrestformat: 'json',
    field: 'email',
    'values[0]': 'irislevine13@gmail.com'
  }
}
‚úÖ Email found in Moodle: {
  id: 97,
  username: 'irislevine13_1752297399863',
  email: 'irislevine13@gmail.com'
}
‚úÖ Perfect match - using existing account
üîç Step 2: Checking course enrollment...
Moodle API Request: {
  wsfunction: 'core_enrol_get_enrolled_users',
  params: { courseid: 2 },
  url: 'https://learn.cabala.com.vn/webservice/rest/server.php',
  formattedParams: {
    wstoken: '567fe59f13ca3bdb3a65a1672e764eeb',
    wsfunction: 'core_enrol_get_enrolled_users',
    moodlewsrestformat: 'json',
    courseid: '2'
  }
}
‚úÖ User already enrolled in course
üîç Step 3: Creating manual login redirect...
üîç Using username: irislevine13_1752297399863
üîç Using password from database
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."users"."id", "public"."users"."moodlePassword" FROM "public"."users" WHERE ("public"."users"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query COMMIT
üîç Will redirect to course: https://learn.cabala.com.vn/course/view.php?id=2
‚úÖ Manual login process completed successfully: {
  finalMoodleUserId: 97,
  finalMoodleUsername: 'irislevine13_1752297399863',
  finalMoodleEmail: 'irislevine13@gmail.com',
  courseId: 2,
  courseUrl: 'https://learn.cabala.com.vn/course/view.php?id=2'
}
üîç Creating auto-fill login form for: https://learn.cabala.com.vn/login/index.php
 GET /api/courses/2/sso?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiJjbWN6c21ld3kwMDAwanEzbjZkZnVmMjFkIiwiZW1haWwiOiJpcmlzbGV2aW5lMTNAZ21haWwuY29tIiwibmFtZSI6IkxpbmggTmd1eWVuIiwicm9sZSI6IlNUVURFTlQiLCJpYXQiOjE3NTIzODkyMTcsImV4cCI6MTc1Mjk5NDAxN30.c0PgmElBZ501ePJieTKyvjGcfvaJdgXmmHGBl0bOIFw 200 in 2121ms
 ‚úì Compiled in 1893ms (853 modules)
 ‚ö† metadataBase property in metadata export is not set for resolving social open graph or twitter images, using "http://localhost:3000". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase
 GET / 200 in 1005ms
 ‚óã Compiling /api/courses ...
 ‚úì Compiled /api/courses in 1024ms (499 modules)
 GET /api/courses 200 in 1500ms
 ‚ö† metadataBase property in metadata export is not set for resolving social open graph or twitter images, using "http://localhost:3000". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase
 GET /courses 200 in 219ms
 GET /api/courses 200 in 323ms
 GET /api/courses 200 in 281ms
 GET /courses/4 200 in 124ms
 ‚óã Compiling /api/courses/[id] ...
 ‚úì Compiled /api/courses/[id] in 557ms (502 modules)
Moodle API Request: {
  wsfunction: 'core_course_get_courses',
  params: {},
  url: 'https://learn.cabala.com.vn/webservice/rest/server.php',
  formattedParams: {
    wstoken: '567fe59f13ca3bdb3a65a1672e764eeb',
    wsfunction: 'core_course_get_courses',
    moodlewsrestformat: 'json'
  }
}
 GET /api/courses/4 200 in 957ms
Moodle API Request: {
  wsfunction: 'core_course_get_courses',
  params: {},
  url: 'https://learn.cabala.com.vn/webservice/rest/server.php',
  formattedParams: {
    wstoken: '567fe59f13ca3bdb3a65a1672e764eeb',
    wsfunction: 'core_course_get_courses',
    moodlewsrestformat: 'json'
  }
}
 GET /api/courses/4 200 in 236ms
 ‚óã Compiling /api/courses/[id]/sso ...
 ‚úì Compiled /api/courses/[id]/sso in 739ms (587 modules)
 ‚ö† metadataBase property in metadata export is not set for resolving social open graph or twitter images, using "http://localhost:3000". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase
 GET /courses/4 200 in 447ms
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."users"."id", "public"."users"."email", "public"."users"."emailVerified", "public"."users"."name", "public"."users"."firstName", "public"."users"."lastName", "public"."users"."password", "public"."users"."avatar", "public"."users"."phone", "public"."users"."role"::text, "public"."users"."moodleUserId", "public"."users"."moodleUsername", "public"."users"."moodlePassword", "public"."users"."isActive", "public"."users"."lastLogin", "public"."users"."createdAt", "public"."users"."updatedAt" FROM "public"."users" WHERE ("public"."users"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query COMMIT
üîç Starting SSO process for user: {
  email: 'irislevine13@gmail.com',
  moodleUserId: 97,
  moodleUsername: 'irislevine13_1752297399863',
  courseId: 4
}
üîç Step 1: Checking if email exists in Moodle...
Moodle API Request: {
  wsfunction: 'core_user_get_users_by_field',
  params: { field: 'email', values: [ 'irislevine13@gmail.com' ] },
  url: 'https://learn.cabala.com.vn/webservice/rest/server.php',
  formattedParams: {
    wstoken: '567fe59f13ca3bdb3a65a1672e764eeb',
    wsfunction: 'core_user_get_users_by_field',
    moodlewsrestformat: 'json',
    field: 'email',
    'values[0]': 'irislevine13@gmail.com'
  }
}
‚úÖ Email found in Moodle: {
  id: 97,
  username: 'irislevine13_1752297399863',
  email: 'irislevine13@gmail.com'
}
‚úÖ Perfect match - using existing account
üîç Step 2: Checking course enrollment...
Moodle API Request: {
  wsfunction: 'core_enrol_get_enrolled_users',
  params: { courseid: 4 },
  url: 'https://learn.cabala.com.vn/webservice/rest/server.php',
  formattedParams: {
    wstoken: '567fe59f13ca3bdb3a65a1672e764eeb',
    wsfunction: 'core_enrol_get_enrolled_users',
    moodlewsrestformat: 'json',
    courseid: '4'
  }
}
üéì User not enrolled - enrolling now...
Moodle API Request: {
  wsfunction: 'core_enrol_get_enrolled_users',
  params: { courseid: 4 },
  url: 'https://learn.cabala.com.vn/webservice/rest/server.php',
  formattedParams: {
    wstoken: '567fe59f13ca3bdb3a65a1672e764eeb',
    wsfunction: 'core_enrol_get_enrolled_users',
    moodlewsrestformat: 'json',
    courseid: '4'
  }
}
Moodle API Request: {
  wsfunction: 'enrol_manual_enrol_users',
  params: { enrolments: [ [Object] ] },
  url: 'https://learn.cabala.com.vn/webservice/rest/server.php',
  formattedParams: {
    wstoken: '567fe59f13ca3bdb3a65a1672e764eeb',
    wsfunction: 'enrol_manual_enrol_users',
    moodlewsrestformat: 'json',
    'enrolments[0][roleid]': '5',
    'enrolments[0][userid]': '97',
    'enrolments[0][courseid]': '4'
  }
}
Moodle API returned null for enrol_manual_enrol_users - treating as success
Successfully enrolled user 97 in course 4
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."enrollments"."id", "public"."enrollments"."userId", "public"."enrollments"."courseId", "public"."enrollments"."status"::text, "public"."enrollments"."progress", "public"."enrollments"."completedAt", "public"."enrollments"."certificateUrl", "public"."enrollments"."moodleEnrollmentId", "public"."enrollments"."createdAt", "public"."enrollments"."updatedAt" FROM "public"."enrollments" LEFT JOIN "public"."courses" AS "j0" ON ("j0"."id") = ("public"."enrollments"."courseId") WHERE ("public"."enrollments"."userId" = $1 AND ("j0"."moodleCourseId" = $2 AND ("j0"."id" IS NOT NULL))) LIMIT $3 OFFSET $4
prisma:query COMMIT
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."courses"."id", "public"."courses"."moodleCourseId", "public"."courses"."title", "public"."courses"."slug", "public"."courses"."description", "public"."courses"."shortDescription", "public"."courses"."thumbnail", "public"."courses"."price", "public"."courses"."originalPrice", "public"."courses"."currency", "public"."courses"."level"::text, "public"."courses"."duration", "public"."courses"."language", "public"."courses"."requirements", "public"."courses"."whatYouWillLearn", "public"."courses"."instructorName", "public"."courses"."instructorEmail", "public"."courses"."instructorBio", "public"."courses"."metaTitle", "public"."courses"."metaDescription", "public"."courses"."keywords", "public"."courses"."isActive", "public"."courses"."isVisible", "public"."courses"."isFeatured", "public"."courses"."isOnSale", "public"."courses"."saleEndsAt", "public"."courses"."viewCount", "public"."courses"."enrollmentCount", "public"."courses"."averageRating", "public"."courses"."totalReviews", "public"."courses"."categoryId", "public"."courses"."createdAt", "public"."courses"."updatedAt" FROM "public"."courses" WHERE "public"."courses"."moodleCourseId" = $1 LIMIT $2 OFFSET $3
prisma:query COMMIT
Moodle API Request: {
  wsfunction: 'core_course_get_courses',
  params: { options: { ids: [Array] } },
  url: 'https://learn.cabala.com.vn/webservice/rest/server.php',
  formattedParams: {
    wstoken: '567fe59f13ca3bdb3a65a1672e764eeb',
    wsfunction: 'core_course_get_courses',
    moodlewsrestformat: 'json',
    'options[ids]': '4'
  }
}
Moodle API Exception: {
  wsfunction: 'core_course_get_courses',
  exception: 'core\\exception\\invalid_parameter_exception',
  message: 'Invalid parameter value detected',
  errorcode: 'invalidparameter',
  debuginfo: undefined
}
Moodle API Error: {
  wsfunction: 'core_course_get_courses',
  error: 'Moodle API Error: Invalid parameter value detected (invalidparameter)',
  params: { options: { ids: [Array] } }
}
‚ùå SSO error: Error: Moodle API Error: Invalid parameter value detected (invalidparameter)
    at MoodleClient.makeRequest (src/lib/moodle/client.ts:178:14)
    at async MoodleClient.getCourseById (src/lib/moodle/client.ts:276:21)
    at async GET (src/app/api/courses/[id]/sso/route.ts:221:31)
  176 |           debuginfo: data.debuginfo,
  177 |         });
> 178 |         throw new Error(`Moodle API Error: ${data.message || data.exception} (${data.errorcode || 'Unknown'})`);
      |              ^
  179 |       }
  180 |
  181 |       // Handle warnings
 GET /api/courses/4/sso?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiJjbWN6c21ld3kwMDAwanEzbjZkZnVmMjFkIiwiZW1haWwiOiJpcmlzbGV2aW5lMTNAZ21haWwuY29tIiwibmFtZSI6IkxpbmggTmd1eWVuIiwicm9sZSI6IlNUVURFTlQiLCJpYXQiOjE3NTIzODkyMTcsImV4cCI6MTc1Mjk5NDAxN30.c0PgmElBZ501ePJieTKyvjGcfvaJdgXmmHGBl0bOIFw 400 in 3424ms
 GET /courses 200 in 307ms
 GET /api/courses 200 in 256ms
 GET /login 200 in 90ms
 ‚óã Compiling /api/auth/login ...
 ‚úì Compiled /api/auth/login in 1283ms (590 modules)
 POST /api/auth/login 200 in 3588ms
 ‚ö† metadataBase property in metadata export is not set for resolving social open graph or twitter images, using "http://localhost:3000". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase
 GET /dashboard 200 in 405ms
 GET /api/courses 200 in 430ms
 ‚óã Compiling /api/my-enrollments ...
 ‚úì Compiled /api/my-enrollments in 1215ms (592 modules)
Moodle API Request: {
  wsfunction: 'core_course_get_courses',
  params: {},
  url: 'https://learn.cabala.com.vn/webservice/rest/server.php',
  formattedParams: {
    wstoken: '567fe59f13ca3bdb3a65a1672e764eeb',
    wsfunction: 'core_course_get_courses',
    moodlewsrestformat: 'json'
  }
}
 ‚ö† metadataBase property in metadata export is not set for resolving social open graph or twitter images, using "http://localhost:3000". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase
 GET /api/my-enrollments 200 in 2667ms
 GET /courses/2 200 in 292ms
Moodle API Request: {
  wsfunction: 'core_course_get_courses',
  params: {},
  url: 'https://learn.cabala.com.vn/webservice/rest/server.php',
  formattedParams: {
    wstoken: '567fe59f13ca3bdb3a65a1672e764eeb',
    wsfunction: 'core_course_get_courses',
    moodlewsrestformat: 'json'
  }
}
Moodle API Request: {
  wsfunction: 'core_course_get_courses',
  params: {},
  url: 'https://learn.cabala.com.vn/webservice/rest/server.php',
  formattedParams: {
    wstoken: '567fe59f13ca3bdb3a65a1672e764eeb',
    wsfunction: 'core_course_get_courses',
    moodlewsrestformat: 'json'
  }
}
 GET /api/courses/2 200 in 258ms
Moodle API Request: {
  wsfunction: 'core_course_get_courses',
  params: {},
  url: 'https://learn.cabala.com.vn/webservice/rest/server.php',
  formattedParams: {
    wstoken: '567fe59f13ca3bdb3a65a1672e764eeb',
    wsfunction: 'core_course_get_courses',
    moodlewsrestformat: 'json'
  }
}
 GET /api/my-enrollments 200 in 734ms
 GET /api/courses/2 200 in 303ms
prisma:query SELECT 1
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."users"."id", "public"."users"."email", "public"."users"."emailVerified", "public"."users"."name", "public"."users"."firstName", "public"."users"."lastName", "public"."users"."password", "public"."users"."avatar", "public"."users"."phone", "public"."users"."role"::text, "public"."users"."moodleUserId", "public"."users"."moodleUsername", "public"."users"."moodlePassword", "public"."users"."isActive", "public"."users"."lastLogin", "public"."users"."createdAt", "public"."users"."updatedAt" FROM "public"."users" WHERE ("public"."users"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query COMMIT
üîç Starting SSO process for user: {
  email: 'irislevine13@gmail.com',
  moodleUserId: 97,
  moodleUsername: 'irislevine13_1752297399863',
  courseId: 2
}
üîç Step 1: Checking if email exists in Moodle...
Moodle API Request: {
  wsfunction: 'core_user_get_users_by_field',
  params: { field: 'email', values: [ 'irislevine13@gmail.com' ] },
  url: 'https://learn.cabala.com.vn/webservice/rest/server.php',
  formattedParams: {
    wstoken: '567fe59f13ca3bdb3a65a1672e764eeb',
    wsfunction: 'core_user_get_users_by_field',
    moodlewsrestformat: 'json',
    field: 'email',
    'values[0]': 'irislevine13@gmail.com'
  }
}
‚úÖ Email found in Moodle: {
  id: 97,
  username: 'irislevine13_1752297399863',
  email: 'irislevine13@gmail.com'
}
‚úÖ Perfect match - using existing account
üîç Step 2: Checking course enrollment...
Moodle API Request: {
  wsfunction: 'core_enrol_get_enrolled_users',
  params: { courseid: 2 },
  url: 'https://learn.cabala.com.vn/webservice/rest/server.php',
  formattedParams: {
    wstoken: '567fe59f13ca3bdb3a65a1672e764eeb',
    wsfunction: 'core_enrol_get_enrolled_users',
    moodlewsrestformat: 'json',
    courseid: '2'
  }
}
‚úÖ User already enrolled in course
üîç Step 3: Creating manual login redirect...
üîç Using username: irislevine13_1752297399863
üîç Using password from database
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."users"."id", "public"."users"."moodlePassword" FROM "public"."users" WHERE ("public"."users"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query COMMIT
üîç Will redirect to course: https://learn.cabala.com.vn/course/view.php?id=2
‚úÖ Manual login process completed successfully: {
  finalMoodleUserId: 97,
  finalMoodleUsername: 'irislevine13_1752297399863',
  finalMoodleEmail: 'irislevine13@gmail.com',
  courseId: 2,
  courseUrl: 'https://learn.cabala.com.vn/course/view.php?id=2'
}
üîç Creating credentials popup and opening course page
 GET /api/courses/2/sso?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiJjbWN6c21ld3kwMDAwanEzbjZkZnVmMjFkIiwiZW1haWwiOiJpcmlzbGV2aW5lMTNAZ21haWwuY29tIiwibmFtZSI6IkxpbmggTmd1eWVuIiwicm9sZSI6IlNUVURFTlQiLCJpYXQiOjE3NTIzOTE2OTIsImV4cCI6MTc1Mjk5NjQ5Mn0.HAJ3cqHbNuumeeTiE98Gc_WPTiDVnXHv0fyGmCKLxEA 200 in 937ms
 ‚úì Compiled in 2.7s (853 modules)
 ‚úì Compiled in 657ms (372 modules)
 ‚úì Compiled in 1316ms (372 modules)
 ‚ö† metadataBase property in metadata export is not set for resolving social open graph or twitter images, using "http://localhost:3000". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase
 GET /courses/2 200 in 1838ms
 ‚óã Compiling /api/courses/[id] ...
 ‚úì Compiled /api/courses/[id] in 1718ms (500 modules)
Moodle API Request: {
  wsfunction: 'core_course_get_courses',
  params: {},
  url: 'https://learn.cabala.com.vn/webservice/rest/server.php',
  formattedParams: {
    wstoken: '567fe59f13ca3bdb3a65a1672e764eeb',
    wsfunction: 'core_course_get_courses',
    moodlewsrestformat: 'json'
  }
}
 GET /api/courses/2 200 in 2447ms
 ‚óã Compiling /api/courses/[id]/sso ...
 ‚úì Compiled /api/courses/[id]/sso in 1481ms (585 modules)
 ‚ö† metadataBase property in metadata export is not set for resolving social open graph or twitter images, using "http://localhost:3000". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase
 GET /courses/2 200 in 859ms
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."users"."id", "public"."users"."email", "public"."users"."emailVerified", "public"."users"."name", "public"."users"."firstName", "public"."users"."lastName", "public"."users"."password", "public"."users"."avatar", "public"."users"."phone", "public"."users"."role"::text, "public"."users"."moodleUserId", "public"."users"."moodleUsername", "public"."users"."moodlePassword", "public"."users"."isActive", "public"."users"."lastLogin", "public"."users"."createdAt", "public"."users"."updatedAt" FROM "public"."users" WHERE ("public"."users"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query COMMIT
üîç Starting SSO process for user: {
  email: 'irislevine13@gmail.com',
  moodleUserId: 97,
  moodleUsername: 'irislevine13_1752297399863',
  courseId: 2
}
üîç Step 1: Checking if email exists in Moodle...
Moodle API Request: {
  wsfunction: 'core_user_get_users_by_field',
  params: { field: 'email', values: [ 'irislevine13@gmail.com' ] },
  url: 'https://learn.cabala.com.vn/webservice/rest/server.php',
  formattedParams: {
    wstoken: '567fe59f13ca3bdb3a65a1672e764eeb',
    wsfunction: 'core_user_get_users_by_field',
    moodlewsrestformat: 'json',
    field: 'email',
    'values[0]': 'irislevine13@gmail.com'
  }
}
‚úÖ Email found in Moodle: {
  id: 97,
  username: 'irislevine13_1752297399863',
  email: 'irislevine13@gmail.com'
}
‚úÖ Perfect match - using existing account
üîç Step 2: Checking course enrollment...
Moodle API Request: {
  wsfunction: 'core_enrol_get_enrolled_users',
  params: { courseid: 2 },
  url: 'https://learn.cabala.com.vn/webservice/rest/server.php',
  formattedParams: {
    wstoken: '567fe59f13ca3bdb3a65a1672e764eeb',
    wsfunction: 'core_enrol_get_enrolled_users',
    moodlewsrestformat: 'json',
    courseid: '2'
  }
}
‚úÖ User already enrolled in course
üîç Step 3: Creating manual login redirect...
üîç Using username: irislevine13_1752297399863
üîç Using password from database
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."users"."id", "public"."users"."moodlePassword" FROM "public"."users" WHERE ("public"."users"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query COMMIT
üîç Will redirect to course: https://learn.cabala.com.vn/course/view.php?id=2
‚úÖ Manual login process completed successfully: {
  finalMoodleUserId: 97,
  finalMoodleUsername: 'irislevine13_1752297399863',
  finalMoodleEmail: 'irislevine13@gmail.com',
  courseId: 2,
  courseUrl: 'https://learn.cabala.com.vn/course/view.php?id=2'
}
üîç Creating credentials popup and opening course page
 GET /api/courses/2/sso?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiJjbWN6c21ld3kwMDAwanEzbjZkZnVmMjFkIiwiZW1haWwiOiJpcmlzbGV2aW5lMTNAZ21haWwuY29tIiwibmFtZSI6IkxpbmggTmd1eWVuIiwicm9sZSI6IlNUVURFTlQiLCJpYXQiOjE3NTIzOTE2OTIsImV4cCI6MTc1Mjk5NjQ5Mn0.HAJ3cqHbNuumeeTiE98Gc_WPTiDVnXHv0fyGmCKLxEA 200 in 6483ms
 ‚úì Compiled in 2.6s (853 modules)
 ‚úì Compiled in 3.2s (853 modules)
 ‚úì Compiled in 1345ms (853 modules)
 ‚ö† metadataBase property in metadata export is not set for resolving social open graph or twitter images, using "http://localhost:3000". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase
 GET /courses/2 200 in 824ms
 ‚óã Compiling /api/courses/[id] ...
 ‚úì Compiled /api/courses/[id] in 1061ms (500 modules)
Moodle API Request: {
  wsfunction: 'core_course_get_courses',
  params: {},
  url: 'https://learn.cabala.com.vn/webservice/rest/server.php',
  formattedParams: {
    wstoken: '567fe59f13ca3bdb3a65a1672e764eeb',
    wsfunction: 'core_course_get_courses',
    moodlewsrestformat: 'json'
  }
}
 GET /api/courses/2 200 in 1753ms
 ‚ö† metadataBase property in metadata export is not set for resolving social open graph or twitter images, using "http://localhost:3000". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase
 GET /dashboard 200 in 284ms
 ‚óã Compiling /api/my-enrollments ...
 ‚úì Compiled /api/my-enrollments in 1082ms (502 modules)
 ‚úì Compiled (585 modules)
 ‚ö† metadataBase property in metadata export is not set for resolving social open graph or twitter images, using "http://localhost:3000". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase
 GET /api/courses 200 in 3014ms
 GET /api/my-enrollments 200 in 3014ms
 GET /login 200 in 2585ms
Moodle API Request: {
  wsfunction: 'core_course_get_courses',
  params: {},
  url: 'https://learn.cabala.com.vn/webservice/rest/server.php',
  formattedParams: {
    wstoken: '567fe59f13ca3bdb3a65a1672e764eeb',
    wsfunction: 'core_course_get_courses',
    moodlewsrestformat: 'json'
  }
}
 GET /courses 200 in 54ms
 GET /api/courses 200 in 248ms
 GET /api/courses 200 in 226ms
 GET /courses/2 200 in 275ms
Moodle API Request: {
  wsfunction: 'core_course_get_courses',
  params: {},
  url: 'https://learn.cabala.com.vn/webservice/rest/server.php',
  formattedParams: {
    wstoken: '567fe59f13ca3bdb3a65a1672e764eeb',
    wsfunction: 'core_course_get_courses',
    moodlewsrestformat: 'json'
  }
}
 GET /api/courses/2 200 in 253ms
Moodle API Request: {
  wsfunction: 'core_course_get_courses',
  params: {},
  url: 'https://learn.cabala.com.vn/webservice/rest/server.php',
  formattedParams: {
    wstoken: '567fe59f13ca3bdb3a65a1672e764eeb',
    wsfunction: 'core_course_get_courses',
    moodlewsrestformat: 'json'
  }
}
 GET /api/courses/2 200 in 240ms
 ‚óã Compiling /api/courses/[id]/sso ...
 ‚úì Compiled /api/courses/[id]/sso in 1169ms (589 modules)
üîç Authentication check: {
  hasAuthHeader: false,
  hasTokenParam: true,
  authHeaderPrefix: undefined,
  tokenParamPrefix: 'eyJhbGciOi'
}
‚úÖ Using token from query parameter
üîç Verifying token...
‚úÖ Authentication successful for user: cmczsmewy0000jq3n6dfuf21d
 ‚ö† metadataBase property in metadata export is not set for resolving social open graph or twitter images, using "http://localhost:3000". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase
 GET /courses/2 200 in 595ms
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."users"."id", "public"."users"."email", "public"."users"."emailVerified", "public"."users"."name", "public"."users"."firstName", "public"."users"."lastName", "public"."users"."password", "public"."users"."avatar", "public"."users"."phone", "public"."users"."role"::text, "public"."users"."moodleUserId", "public"."users"."moodleUsername", "public"."users"."moodlePassword", "public"."users"."isActive", "public"."users"."lastLogin", "public"."users"."createdAt", "public"."users"."updatedAt" FROM "public"."users" WHERE ("public"."users"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query COMMIT
üîç Starting SSO process for user: {
  email: 'irislevine13@gmail.com',
  moodleUserId: 97,
  moodleUsername: 'irislevine13_1752297399863',
  courseId: 2
}
üîç Step 1: Checking if email exists in Moodle...
Moodle API Request: {
  wsfunction: 'core_user_get_users_by_field',
  params: { field: 'email', values: [ 'irislevine13@gmail.com' ] },
  url: 'https://learn.cabala.com.vn/webservice/rest/server.php',
  formattedParams: {
    wstoken: '567fe59f13ca3bdb3a65a1672e764eeb',
    wsfunction: 'core_user_get_users_by_field',
    moodlewsrestformat: 'json',
    field: 'email',
    'values[0]': 'irislevine13@gmail.com'
  }
}
‚úÖ Email found in Moodle: {
  id: 97,
  username: 'irislevine13_1752297399863',
  email: 'irislevine13@gmail.com'
}
‚úÖ Perfect match - using existing account
üîç Step 2: Checking course enrollment...
Moodle API Request: {
  wsfunction: 'core_enrol_get_enrolled_users',
  params: { courseid: 2 },
  url: 'https://learn.cabala.com.vn/webservice/rest/server.php',
  formattedParams: {
    wstoken: '567fe59f13ca3bdb3a65a1672e764eeb',
    wsfunction: 'core_enrol_get_enrolled_users',
    moodlewsrestformat: 'json',
    courseid: '2'
  }
}
‚úÖ User already enrolled in course
üîç Step 3: Creating manual login redirect...
üîç Using username: irislevine13_1752297399863
üîç Using password from database
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."users"."id", "public"."users"."moodlePassword" FROM "public"."users" WHERE ("public"."users"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
üîç Will redirect to course: https://learn.cabala.com.vn/course/view.php?id=2
‚úÖ Manual login process completed successfully: {
  finalMoodleUserId: 97,
  finalMoodleUsername: 'irislevine13_1752297399863',
  finalMoodleEmail: 'irislevine13@gmail.com',
  courseId: 2,
  courseUrl: 'https://learn.cabala.com.vn/course/view.php?id=2'
}
üîç Creating credentials popup and opening course page
 GET /api/courses/2/sso?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiJjbWN6c21ld3kwMDAwanEzbjZkZnVmMjFkIiwiZW1haWwiOiJpcmlzbGV2aW5lMTNAZ21haWwuY29tIiwibmFtZSI6IkxpbmggTmd1eWVuIiwicm9sZSI6IlNUVURFTlQiLCJpYXQiOjE3NTIzOTE2OTIsImV4cCI6MTc1Mjk5NjQ5Mn0.HAJ3cqHbNuumeeTiE98Gc_WPTiDVnXHv0fyGmCKLxEA 200 in 2659ms
prisma:query COMMIT
 GET /courses/2 200 in 808ms
Moodle API Request: {
  wsfunction: 'core_course_get_courses',
  params: {},
  url: 'https://learn.cabala.com.vn/webservice/rest/server.php',
  formattedParams: {
    wstoken: '567fe59f13ca3bdb3a65a1672e764eeb',
    wsfunction: 'core_course_get_courses',
    moodlewsrestformat: 'json'
  }
}
 GET /api/courses/2 200 in 284ms
 GET /courses 200 in 51ms
 GET /api/courses 200 in 254ms
 GET /api/courses 200 in 285ms
 GET /courses/4 200 in 87ms
Moodle API Request: {
  wsfunction: 'core_course_get_courses',
  params: {},
  url: 'https://learn.cabala.com.vn/webservice/rest/server.php',
  formattedParams: {
    wstoken: '567fe59f13ca3bdb3a65a1672e764eeb',
    wsfunction: 'core_course_get_courses',
    moodlewsrestformat: 'json'
  }
}
 GET /api/courses/4 200 in 241ms
Moodle API Request: {
  wsfunction: 'core_course_get_courses',
  params: {},
  url: 'https://learn.cabala.com.vn/webservice/rest/server.php',
  formattedParams: {
    wstoken: '567fe59f13ca3bdb3a65a1672e764eeb',
    wsfunction: 'core_course_get_courses',
    moodlewsrestformat: 'json'
  }
}
 GET /api/courses/4 200 in 245ms
 GET / 200 in 376ms
 ‚óã Compiling /favicon.ico ...
 ‚úì Compiled /favicon.ico in 957ms (591 modules)
 GET /favicon.ico 200 in 1564ms
 ‚ö† metadataBase property in metadata export is not set for resolving social open graph or twitter images, using "http://localhost:3000". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase
 GET /api/courses 200 in 1476ms
 GET /courses 200 in 273ms
 GET /favicon.ico 200 in 17ms
 GET /api/courses 200 in 277ms
 GET /api/courses 200 in 222ms
 GET /courses/2 200 in 303ms
Moodle API Request: {
  wsfunction: 'core_course_get_courses',
  params: {},
  url: 'https://learn.cabala.com.vn/webservice/rest/server.php',
  formattedParams: {
    wstoken: '567fe59f13ca3bdb3a65a1672e764eeb',
    wsfunction: 'core_course_get_courses',
    moodlewsrestformat: 'json'
  }
}
 GET /favicon.ico 200 in 119ms
 GET /api/courses/2 200 in 407ms
Moodle API Request: {
  wsfunction: 'core_course_get_courses',
  params: {},
  url: 'https://learn.cabala.com.vn/webservice/rest/server.php',
  formattedParams: {
    wstoken: '567fe59f13ca3bdb3a65a1672e764eeb',
    wsfunction: 'core_course_get_courses',
    moodlewsrestformat: 'json'
  }
}
 GET /api/courses/2 200 in 247ms
 GET /login?return=%2Fcourses%2F2 200 in 69ms
 GET /favicon.ico 200 in 19ms
 ‚óã Compiling /api/auth/login ...
 ‚úì Compiled /api/auth/login in 583ms (594 modules)
 POST /api/auth/login 200 in 2267ms
 ‚ö† metadataBase property in metadata export is not set for resolving social open graph or twitter images, using "http://localhost:3000". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase
 GET /courses/2 200 in 427ms
 GET /favicon.ico 200 in 22ms
Moodle API Request: {
  wsfunction: 'core_course_get_courses',
  params: {},
  url: 'https://learn.cabala.com.vn/webservice/rest/server.php',
  formattedParams: {
    wstoken: '567fe59f13ca3bdb3a65a1672e764eeb',
    wsfunction: 'core_course_get_courses',
    moodlewsrestformat: 'json'
  }
}
 GET /api/courses/2 200 in 272ms
üîç Authentication check: {
  hasAuthHeader: false,
  hasTokenParam: true,
  authHeaderPrefix: undefined,
  tokenParamPrefix: 'eyJhbGciOi'
}
‚úÖ Using token from query parameter
üîç Verifying token...
‚úÖ Authentication successful for user: cmczsmewy0000jq3n6dfuf21d
prisma:query SELECT 1
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."users"."id", "public"."users"."email", "public"."users"."emailVerified", "public"."users"."name", "public"."users"."firstName", "public"."users"."lastName", "public"."users"."password", "public"."users"."avatar", "public"."users"."phone", "public"."users"."role"::text, "public"."users"."moodleUserId", "public"."users"."moodleUsername", "public"."users"."moodlePassword", "public"."users"."isActive", "public"."users"."lastLogin", "public"."users"."createdAt", "public"."users"."updatedAt" FROM "public"."users" WHERE ("public"."users"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query COMMIT
üîç Starting SSO process for user: {
  email: 'irislevine13@gmail.com',
  moodleUserId: 97,
  moodleUsername: 'irislevine13_1752297399863',
  courseId: 2
}
üîç Step 1: Checking if email exists in Moodle...
Moodle API Request: {
  wsfunction: 'core_user_get_users_by_field',
  params: { field: 'email', values: [ 'irislevine13@gmail.com' ] },
  url: 'https://learn.cabala.com.vn/webservice/rest/server.php',
  formattedParams: {
    wstoken: '567fe59f13ca3bdb3a65a1672e764eeb',
    wsfunction: 'core_user_get_users_by_field',
    moodlewsrestformat: 'json',
    field: 'email',
    'values[0]': 'irislevine13@gmail.com'
  }
}
‚úÖ Email found in Moodle: {
  id: 97,
  username: 'irislevine13_1752297399863',
  email: 'irislevine13@gmail.com'
}
‚úÖ Perfect match - using existing account
üîç Step 2: Checking course enrollment...
Moodle API Request: {
  wsfunction: 'core_enrol_get_enrolled_users',
  params: { courseid: 2 },
  url: 'https://learn.cabala.com.vn/webservice/rest/server.php',
  formattedParams: {
    wstoken: '567fe59f13ca3bdb3a65a1672e764eeb',
    wsfunction: 'core_enrol_get_enrolled_users',
    moodlewsrestformat: 'json',
    courseid: '2'
  }
}
‚úÖ User already enrolled in course
üîç Step 3: Creating manual login redirect...
üîç Using username: irislevine13_1752297399863
üîç Using password from database
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."users"."id", "public"."users"."moodlePassword" FROM "public"."users" WHERE ("public"."users"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
üîç Will redirect to course: https://learn.cabala.com.vn/course/view.php?id=2
‚úÖ Manual login process completed successfully: {
  finalMoodleUserId: 97,
  finalMoodleUsername: 'irislevine13_1752297399863',
  finalMoodleEmail: 'irislevine13@gmail.com',
  courseId: 2,
  courseUrl: 'https://learn.cabala.com.vn/course/view.php?id=2'
}
üîç Creating credentials popup and opening course page
 GET /api/courses/2/sso?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiJjbWN6c21ld3kwMDAwanEzbjZkZnVmMjFkIiwiZW1haWwiOiJpcmlzbGV2aW5lMTNAZ21haWwuY29tIiwibmFtZSI6IkxpbmggTmd1eWVuIiwicm9sZSI6IlNUVURFTlQiLCJpYXQiOjE3NTI0MjMyMzIsImV4cCI6MTc1MzAyODAzMn0.tgdKdlalm4kiSt9UZaMIagtDGOqqMHR_ZXVsHSV5vlo 200 in 921ms
prisma:query COMMIT
 GET /favicon.ico 200 in 47ms
 GET /courses/2 200 in 245ms
 GET /favicon.ico 200 in 16ms
Moodle API Request: {
  wsfunction: 'core_course_get_courses',
  params: {},
  url: 'https://learn.cabala.com.vn/webservice/rest/server.php',
  formattedParams: {
    wstoken: '567fe59f13ca3bdb3a65a1672e764eeb',
    wsfunction: 'core_course_get_courses',
    moodlewsrestformat: 'json'
  }
}
 GET /api/courses/2 200 in 314ms
 GET /courses 200 in 237ms
 GET /favicon.ico 200 in 26ms
 GET /api/courses 200 in 399ms
 GET /api/courses 200 in 318ms
 GET /login 200 in 100ms
 GET /favicon.ico 200 in 28ms
 POST /api/auth/login 200 in 1259ms
 GET /dashboard 200 in 304ms
 GET /favicon.ico 200 in 62ms
 GET /api/courses 200 in 335ms
Moodle API Request: {
  wsfunction: 'core_course_get_courses',
  params: {},
  url: 'https://learn.cabala.com.vn/webservice/rest/server.php',
  formattedParams: {
    wstoken: '567fe59f13ca3bdb3a65a1672e764eeb',
    wsfunction: 'core_course_get_courses',
    moodlewsrestformat: 'json'
  }
}
 GET /api/my-enrollments 200 in 1293ms
Moodle API Request: {
  wsfunction: 'core_course_get_courses',
  params: {},
  url: 'https://learn.cabala.com.vn/webservice/rest/server.php',
  formattedParams: {
    wstoken: '567fe59f13ca3bdb3a65a1672e764eeb',
    wsfunction: 'core_course_get_courses',
    moodlewsrestformat: 'json'
  }
}
 GET /api/my-enrollments 200 in 692ms
 ‚óã Compiling /_not-found ...
 ‚úì Compiled /_not-found in 3.6s (949 modules)
 ‚ö† metadataBase property in metadata export is not set for resolving social open graph or twitter images, using "http://localhost:3000". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase
 GET /api/courses/7/access 404 in 3951ms
 ‚úì Compiled in 22.7s (853 modules)
 ‚ö† metadataBase property in metadata export is not set for resolving social open graph or twitter images, using "http://localhost:3000". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase
 ‚óã Compiling /_not-found ...
 GET /dashboard 200 in 2618ms
 GET /courses/4 200 in 2725ms
 ‚úì Compiled /favicon.ico in 6.4s (842 modules)
 ‚úì Compiled (858 modules)
 ‚ö† metadataBase property in metadata export is not set for resolving social open graph or twitter images, using "http://localhost:3000". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase
 GET /favicon.ico 200 in 3830ms
 GET /api/courses/7/access 404 in 8692ms
 GET /api/courses/7/access 404 in 1262ms
 ‚óã Compiling /api/courses/[id]/sso ...
 ‚úì Compiled /api/courses/[id]/sso in 2.1s (583 modules)
üîç Authentication check: {
  hasAuthHeader: false,
  hasTokenParam: false,
  authHeaderPrefix: undefined,
  tokenParamPrefix: undefined
}
‚ùå No authentication found - redirecting to login
 GET /api/courses/7/sso 307 in 2497ms
 ‚®Ø [Error: ENOENT: no such file or directory, open '/Users/nguyenthuylinh/Desktop/cabala website/cabala-website/.next/server/app/login/page.js'] {
  errno: -2,
  syscall: 'open',
  code: 'ENOENT',
  path: '/Users/nguyenthuylinh/Desktop/cabala website/cabala-website/.next/server/app/login/page.js',
  page: '/login'
}
 ‚óã Compiling /_error ...
 ‚®Ø Failed to generate static paths for /api/courses/[id]/sso:
Error: Cannot find module './vendor-chunks/next.js'
Require stack:
- /Users/nguyenthuylinh/Desktop/cabala website/cabala-website/.next/server/webpack-runtime.js
- /Users/nguyenthuylinh/Desktop/cabala website/cabala-website/.next/server/app/api/courses/[id]/sso/route.js
- /Users/nguyenthuylinh/Desktop/cabala website/cabala-website/node_modules/next/dist/server/require.js
- /Users/nguyenthuylinh/Desktop/cabala website/cabala-website/node_modules/next/dist/server/load-components.js
- /Users/nguyenthuylinh/Desktop/cabala website/cabala-website/node_modules/next/dist/build/utils.js
- /Users/nguyenthuylinh/Desktop/cabala website/cabala-website/node_modules/next/dist/server/dev/static-paths-worker.js
- /Users/nguyenthuylinh/Desktop/cabala website/cabala-website/node_modules/next/dist/compiled/jest-worker/processChild.js
    at __webpack_require__.f.require (.next/server/webpack-runtime.js:203:28)
    at <unknown> (.next/server/webpack-runtime.js:116:40)
    at Array.reduce (<anonymous>)
    at __webpack_require__.e (.next/server/webpack-runtime.js:115:67) {
  type: 'Error',
  code: 'MODULE_NOT_FOUND',
  requireStack: [Array]
}
 ‚úì Compiled /_not-found in 8.4s (1278 modules)
 ‚ö† metadataBase property in metadata export is not set for resolving social open graph or twitter images, using "http://localhost:3000". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase
 ‚®Ø [Error: ENOENT: no such file or directory, open '/Users/nguyenthuylinh/Desktop/cabala website/cabala-website/.next/server/app/courses/[id]/page.js'] {
  errno: -2,
  syscall: 'open',
  code: 'ENOENT',
  path: '/Users/nguyenthuylinh/Desktop/cabala website/cabala-website/.next/server/app/courses/[id]/page.js',
  page: '/courses/4'
}
 ‚®Ø [Error: ENOENT: no such file or directory, open '/Users/nguyenthuylinh/Desktop/cabala website/cabala-website/.next/server/app/dashboard/page.js'] {
  errno: -2,
  syscall: 'open',
  code: 'ENOENT',
  path: '/Users/nguyenthuylinh/Desktop/cabala website/cabala-website/.next/server/app/dashboard/page.js',
  page: '/dashboard'
}
 GET /login?redirect=%2Fcourses%2F7 500 in 10082ms
 GET /api/courses/7/access 404 in 3988ms
 GET /api/courses/7/access 404 in 817ms
 GET /api/courses/7/access 404 in 268ms
 GET /courses/4 500 in 4206ms
 GET /dashboard 500 in 4467ms
 GET /_next/static/css/app/layout.css?v=1752423859824 404 in 233ms
 ‚®Ø [Error: ENOENT: no such file or directory, open '/Users/nguyenthuylinh/Desktop/cabala website/cabala-website/.next/server/app/dashboard/page.js'] {
  errno: -2,
  syscall: 'open',
  code: 'ENOENT',
  path: '/Users/nguyenthuylinh/Desktop/cabala website/cabala-website/.next/server/app/dashboard/page.js',
  page: '/dashboard'
}
 ‚®Ø [Error: ENOENT: no such file or directory, open '/Users/nguyenthuylinh/Desktop/cabala website/cabala-website/.next/server/app/courses/[id]/page.js'] {
  errno: -2,
  syscall: 'open',
  code: 'ENOENT',
  path: '/Users/nguyenthuylinh/Desktop/cabala website/cabala-website/.next/server/app/courses/[id]/page.js',
  page: '/courses/4'
}
 GET /_next/static/chunks/main-app.js?v=1752423859824 404 in 422ms
 GET /_next/static/chunks/app-pages-internals.js 404 in 185ms
 GET /dashboard 500 in 570ms
 ‚®Ø [Error: ENOENT: no such file or directory, open '/Users/nguyenthuylinh/Desktop/cabala website/cabala-website/.next/server/app/dashboard/page.js'] {
  errno: -2,
  syscall: 'open',
  code: 'ENOENT',
  path: '/Users/nguyenthuylinh/Desktop/cabala website/cabala-website/.next/server/app/dashboard/page.js',
  page: '/dashboard'
}
 GET /courses/4 500 in 793ms
 GET /dashboard 500 in 573ms
 ‚®Ø [Error: ENOENT: no such file or directory, open '/Users/nguyenthuylinh/Desktop/cabala website/cabala-website/.next/server/app/courses/[id]/page.js'] {
  errno: -2,
  syscall: 'open',
  code: 'ENOENT',
  path: '/Users/nguyenthuylinh/Desktop/cabala website/cabala-website/.next/server/app/courses/[id]/page.js',
  page: '/courses/4'
}
 GET /courses/4 500 in 705ms
 ‚óã Compiling /favicon.ico ...
 ‚úì Compiled /favicon.ico in 2.8s (1280 modules)
 GET /favicon.ico 200 in 3203ms
 GET /favicon.ico 200 in 267ms
 ‚®Ø [Error: ENOENT: no such file or directory, open '/Users/nguyenthuylinh/Desktop/cabala website/cabala-website/.next/server/app/page.js'] {
  errno: -2,
  syscall: 'open',
  code: 'ENOENT',
  path: '/Users/nguyenthuylinh/Desktop/cabala website/cabala-website/.next/server/app/page.js',
  page: '/'
}
 GET / 500 in 575ms
[?25h
